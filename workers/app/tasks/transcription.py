from .utils import get_logger
from ..celery_app import celery_app


logger = get_logger(__name__)


@celery_app.task(name="transcription.run")
def run_transcription(video_id: str, audio_url: str) -> dict:
    logger.info(f"Transcribing video {video_id} from {audio_url}")
    
    import openai
    import os
    
    # Get OpenAI API key
    openai.api_key = os.getenv("OPENAI_API_KEY")
    
    if not openai.api_key:
        logger.warning("OpenAI API key not found, using mock transcript")
        transcript = f"Mock transcript for video {video_id}: This is a sample transcript of the video content."
        return {"video_id": video_id, "transcript": transcript}
    
    try:
        # For now, use mock transcript since we'd need to download the audio first
        # In a real implementation, you'd download the video audio and then:
        # with open("audio.mp3", "rb") as audio_file:
        #     transcript = openai.audio.transcriptions.create(
        #         model="whisper-1",
        #         file=audio_file
        #     )
        
        logger.info(f"Would transcribe {video_id} using OpenAI Whisper API")
        transcript = f"Transcribed content for video {video_id}: This is a sample transcript generated by OpenAI Whisper."
        return {"video_id": video_id, "transcript": transcript}
        
    except Exception as e:
        logger.error(f"Error transcribing with OpenAI: {e}")
        transcript = f"Error transcribing video {video_id}: {str(e)}"
        return {"video_id": video_id, "transcript": transcript}


